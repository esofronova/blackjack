{"version":3,"sources":["data.js","app.js","index.js"],"names":["values","Array","map","k","i","splice","suits","name","icon","cards","forEach","color","suit","value","push","buttons","chips","Blackjack","document","title","useState","gameStarted","setGameStarted","gameOver","setGameOver","winner","setWinner","dealerCards","setDealerCards","yourCards","setYourCards","dealerPoints","setDealerPoints","yourPoints","setYourPoints","addCard","player","card","Math","floor","random","length","getRandom","countPoints","addToArr","arr","sum","undefined","setTimeout","balance","setBalance","bet","setBet","yCards","dCards","className","chip","index","disabled","onClick","style","left","slice","btn","querySelector","setAttribute","window","location","reload","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4ced4539.chunk.js","sourcesContent":["const values = [...Array(10)].map((k = 1, i) => k + i);\r\n// remove \"5\"\r\nvalues.splice(4, 1);\r\n\r\nconst suits = [\r\n  {\r\n    name: 'spades',\r\n    icon: '♠'\r\n  },\r\n  {\r\n    name: 'hearts',\r\n    icon: '♥'\r\n  },\r\n  {\r\n    name: 'diamonds',\r\n    icon: '♦'\r\n  },\r\n  {\r\n    name: 'clubs',\r\n    icon: '♣'\r\n  }\r\n];\r\n\r\nconst colors = ['black', 'red'];\r\n\r\nexport const cards = [];\r\ncolors.forEach((color) => {\r\n  suits.forEach((suit) => {\r\n    values.forEach((value) => {\r\n      cards.push(\r\n        {\r\n          name: value === 1 ? 'ace' : value === 2 ? 'jack' : value === 3 ? 'queen' : value === 4 ? 'king' : value,\r\n          value: value,\r\n          suit: suit.name,\r\n          icon: suit.icon,\r\n          color: color\r\n        }\r\n      );\r\n    });\r\n  });\r\n});\r\n\r\n// console.log(cards);\r\n\r\n// function groupBy(data, val) {\r\n//   let group = [];\r\n//   data.forEach((item) => {\r\n//     if (!group[item[val]]) {\r\n//       group[item[val]] = [];\r\n//     }\r\n//     group[item[val]].push(item);\r\n//   });\r\n//   console.log(group);\r\n// };\r\n\r\n// groupBy(cards, ['suit']);\r\n\r\nexport const buttons = ['deal', 'hit', 'stand'];\r\nexport const chips = [5, 25, 50, 100];","import { buttons, cards, chips } from './data';\r\nimport './style.scss';\r\nimport { useState } from 'react';\r\n\r\n// TODO\r\n// - gameOver\r\n// - balance\r\n// - start new game\r\n// - splice cards from array\r\n// - dealer points\r\n\r\nexport default function Blackjack() {\r\n\r\n  document.title = \"Blackjack\";\r\n\r\n  const getRandom = () => {\r\n    let rand = Math.floor(Math.random() * (cards.length + 1));\r\n    return rand\r\n  };\r\n\r\n  let [gameStarted, setGameStarted] = useState(false);\r\n  let [gameOver, setGameOver] = useState(false);\r\n  let [winner, setWinner] = useState(null);\r\n\r\n  let [dealerCards, setDealerCards] = useState([]);\r\n  let [yourCards, setYourCards] = useState([]);\r\n\r\n  let [dealerPoints, setDealerPoints] = useState(0);\r\n  let [yourPoints, setYourPoints] = useState(0);\r\n\r\n  function addCard(player) {\r\n    addToArr();\r\n\r\n    function addToArr() {\r\n      let card = `${player}Card`;\r\n      card = getRandom();\r\n      if (player === 'you') {\r\n        yourCards.push(cards[card]);\r\n        setYourCards([...yourCards]);\r\n        setYourPoints(countPoints(yourCards));\r\n\r\n      } else if (player === 'dealer') {\r\n        dealerCards.push(cards[card]);\r\n        setDealerCards([...dealerCards]);\r\n        setDealerPoints(dealerCards[0].value);\r\n        // cards.splice(cards.indexOf(cards[dealerCard]), 1);\r\n      };\r\n    };\r\n  };\r\n\r\n  function countPoints(arr) {\r\n    let sum = 0;\r\n    arr.forEach((card) => {\r\n      if (card !== undefined) {\r\n        sum += card.value;\r\n      };\r\n    });\r\n    return sum;\r\n  };\r\n\r\n  setTimeout(() => {\r\n    if (yourPoints === 21 || dealerPoints > 21) {\r\n      setGameOver(true);\r\n      setWinner(\"Congratulations! You're lucky today! :)\");\r\n    } else if (dealerPoints === 21 || yourPoints > 21) {\r\n      setGameOver(true);\r\n      setWinner(\"Dealer is the winner! Maybe next time!..\")\r\n    };\r\n  }, 200);\r\n\r\n  let [balance, setBalance] = useState(500);\r\n  let [bet, setBet] = useState(0);\r\n\r\n  let yCards = -50;\r\n  let dCards = -50;\r\n\r\n  return (\r\n    <div className=\"blackjack py-5 h-100\">\r\n      <div className=\"d-flex text-white text-center h-100\">\r\n\r\n        <div className=\"col-4\">\r\n          <div className=\"h-100 d-flex flex-column justify-content-around py-3\">\r\n            <h2>Min bet is $25</h2>\r\n            <div>\r\n              <h2>Bet</h2>\r\n              <h1>{`$ ${bet}`}</h1>\r\n            </div>\r\n            <div className=\"centered\">\r\n              <div className=\"mb-4\">\r\n                <h2>Balance</h2>\r\n                <h1>{`$ ${balance}`}</h1>\r\n              </div>\r\n              <div className=\"d-flex justify-content-around gap-2 w-75 mx-auto\">\r\n                {chips.map((chip, index) => {\r\n                  return (\r\n                    <button\r\n                      key={index}\r\n                      disabled={gameStarted ? true : false}\r\n                      className={\"btn rounded-circle p-1 text-white border border-dark chip \" + (chip === 5 ? \"btn-success\" : chip === 25 ? \"btn-primary\" : chip === 50 ? \"btn-warning\" : \"btn-danger\")}\r\n                      onClick={() => {\r\n                        if (balance >= chip) {\r\n                          setBet(bet + chip);\r\n                          setBalance(balance - chip);\r\n                        };\r\n                      }}\r\n                    >{chip}</button>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-4\">\r\n          <div className=\"mb-5\">\r\n            <h5 className=\"text-white text-center mb-3\">{`Dealer: ${dealerPoints}`}</h5>\r\n            <div className=\"d-flex\">\r\n              <div className=\"card me-3 position-static col-3\">\r\n                <div className=\"card-back\"></div>\r\n              </div>\r\n              <div className=\"d-flex cards col-9\">\r\n                {dealerCards.map((card, index) => {\r\n                  dCards += 50;\r\n                  return (\r\n                    <div\r\n                      key={index}\r\n                      className={\"card \" + (card.color === 'red' ? 'text-danger' : 'text-dark')}\r\n                      style={{ left: dCards + \"px\" }}\r\n                    >\r\n                      {index === 0 ?\r\n                        <div className=\"card-front\">\r\n                          <div className=\"align-self-start\">{card.name.length > 1 ? card.name.slice(0, 1) : card.name}</div>\r\n                          <div className=\"align-self-center icon\">{card.icon}</div>\r\n                          <div className=\"align-self-end\">{card.name.length > 1 ? card.name.slice(0, 1) : card.name}</div>\r\n                        </div>\r\n                        :\r\n                        <div className=\"card-back\"></div>\r\n                      }\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"\">\r\n            <h5 className=\"text-white text-center mb-3\">{`You: ${yourPoints}`}</h5>\r\n            <div className=\"d-flex cards\">\r\n              {yourCards.map((card, index) => {\r\n                yCards += 50;\r\n                return (\r\n                  <div\r\n                    key={index}\r\n                    className={\"card \" + (card.color === 'red' ? 'text-danger' : 'text-dark')}\r\n                    style={{ left: yCards + \"px\" }}\r\n                  >\r\n                    <div className=\"card-front\">\r\n                      <div className=\"align-self-start\">{card.name.length > 1 ? card.name.slice(0, 1) : card.name}</div>\r\n                      <div className=\"align-self-center icon\">{card.icon}</div>\r\n                      <div className=\"align-self-end\">{card.name.length > 1 ? card.name.slice(0, 1) : card.name}</div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-4 centered\">\r\n          <div className=\"mt-5 btns d-flex flex-column\">\r\n            {buttons.map((btn, index) => {\r\n              return (\r\n                <button\r\n                  key={index}\r\n                  disabled={btn === 'deal' && bet >= 25 ? false : gameStarted ? false : true}\r\n                  className={\"btn w-100 mb-3 text-uppercase btn-\" + (btn === 'deal' ? 'primary' : btn === 'hit' ? 'success' : 'danger') + (` btn-${btn}`)}\r\n                  onClick={() => {\r\n                    if (btn === 'hit') {\r\n                      addCard('you');\r\n                    };\r\n                    if (btn === 'stand') {\r\n                      document.querySelector('.btn-hit').setAttribute(\"disabled\", true);\r\n                      addCard('dealer');\r\n                      countPoints(dealerCards);\r\n                    };\r\n                    if (btn === 'deal') {\r\n                      addCard('dealer');\r\n                      addCard('dealer');\r\n                      addCard('you');\r\n                      addCard('you');\r\n                      setGameStarted(true);\r\n                      document.querySelector('.btn-deal').setAttribute(\"disabled\", true);\r\n                    };\r\n                  }}\r\n                >{btn}</button>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div className={\"overlay position-fixed centered w-100 h-100 \" + (gameOver ? \"\" : \"d-none\")}>\r\n        <div className=\"fs-1 bg-white p-4 rounded\">\r\n          <h3 className=\"text-center w-75 mx-auto\">{winner}</h3>\r\n          <div className=\"centered mt-3\">\r\n            <button\r\n              className=\"btn btn-dark\"\r\n              onClick={() => {\r\n                window.location.reload();\r\n              }}\r\n            >New Game</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './classes.scss';\nimport App from './app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}